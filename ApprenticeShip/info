flutter create recipes

cd recipes
flutter run


flutter clean

for Gradle task 'assembleDebug'... issue at startup:
flutter doctor --android-licenses

https://www.raywenderlich.com/books/flutter-apprentice/v2.0/chapters/6-interactive-widgets

https://www.raywenderlich.com/books/flutter-apprentice/v2.0/chapters/5-scrollable-widgets

https://forums.raywenderlich.com/c/books/flutter-apprentice

Adding a package dependency to an app
From the terminal: Run flutter pub get . 

try:

flutter upgrade
then:

flutter run -v


Every widget’s build() method takes a BuildContext 
as an argument. The build context tells you where 
you are in the tree of widgets. You can access the 
element for any widget through the BuildContext

Column and Row widgets are like ListView but without the scroll view.

The main axis always corresponds to the scroll direction!

If your scroll direction is horizontal, you can think of this(main axis) as a Row. The main axis represents the horizontal direction

If your scroll direction is vertical, you can think of it(main axis) as a Column. The main axis represents the vertical direction

Grid delegates help figure out the spacing and the number of columns to use to lay out the children in a GridView.


Convert Stateless to Stateful Widget: 
do ds in adroid studio
Open author_card.dart and right-click on AuthorCard. 
Then click Show Context Actions from the menu that pops up:


Note: Remember that the purpose of a barrel file is to group common Dart files together. This allows you to group classes that are commonly used together so you only have to import a single file — in this case, models.dart.

Tip: You should only wrap a Consumer around widgets that need it. For example, wrapping a consumer widget at the top level would force it to rebuild the entire tree!


A deep link is a URL that navigates to a specific destination in your mobile app. You
can think of deep links like a URL address you enter into a web browser to go to a
specific page of a website rather than the home page.

For deep links to work, you need to do two key things: convert a URL to an app state
and convert an app state to a URL

navigation state is just a user-defined data type. It
converts a URL string into a proper data type.

AppLink is the intermediary object between a URL string and your app state.

